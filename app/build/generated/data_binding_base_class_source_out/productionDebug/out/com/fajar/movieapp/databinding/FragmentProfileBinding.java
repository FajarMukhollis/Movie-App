// Generated by view binder compiler. Do not edit!
package com.fajar.movieapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fajar.movieapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final Button btnUpdateProfile;

  @NonNull
  public final TextView tvAddress;

  @NonNull
  public final TextView tvDateOfBirth;

  @NonNull
  public final TextView tvEmail;

  @NonNull
  public final TextView tvFullName;

  @NonNull
  public final TextView tvRegister;

  @NonNull
  public final TextView tvUsername;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnLogout,
      @NonNull Button btnUpdateProfile, @NonNull TextView tvAddress,
      @NonNull TextView tvDateOfBirth, @NonNull TextView tvEmail, @NonNull TextView tvFullName,
      @NonNull TextView tvRegister, @NonNull TextView tvUsername) {
    this.rootView = rootView;
    this.btnLogout = btnLogout;
    this.btnUpdateProfile = btnUpdateProfile;
    this.tvAddress = tvAddress;
    this.tvDateOfBirth = tvDateOfBirth;
    this.tvEmail = tvEmail;
    this.tvFullName = tvFullName;
    this.tvRegister = tvRegister;
    this.tvUsername = tvUsername;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_logout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.btn_update_profile;
      Button btnUpdateProfile = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdateProfile == null) {
        break missingId;
      }

      id = R.id.tv_address;
      TextView tvAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvAddress == null) {
        break missingId;
      }

      id = R.id.tv_date_of_birth;
      TextView tvDateOfBirth = ViewBindings.findChildViewById(rootView, id);
      if (tvDateOfBirth == null) {
        break missingId;
      }

      id = R.id.tv_email;
      TextView tvEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvEmail == null) {
        break missingId;
      }

      id = R.id.tv_full_name;
      TextView tvFullName = ViewBindings.findChildViewById(rootView, id);
      if (tvFullName == null) {
        break missingId;
      }

      id = R.id.tv_register;
      TextView tvRegister = ViewBindings.findChildViewById(rootView, id);
      if (tvRegister == null) {
        break missingId;
      }

      id = R.id.tv_username;
      TextView tvUsername = ViewBindings.findChildViewById(rootView, id);
      if (tvUsername == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, btnLogout, btnUpdateProfile,
          tvAddress, tvDateOfBirth, tvEmail, tvFullName, tvRegister, tvUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
